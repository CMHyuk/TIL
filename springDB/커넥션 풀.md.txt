## 데이터베이스 커넥션 획득 과정
1. 애플리케이션 로직은 DB 드라이버를 통해 커넥션을 조회
2. DB 드라이버는 DB와 TCP/IP 커넥션을 연결, 이 과정에서 3 way handshake 같은 TCP/IP
연결을 위한 네트워크 동작이 발생한다.
3. DB 드라이버는 TCP/IP 커넥션이 연결되면 ID, PW와 기타 부가정보를 DB에 전달
4. DB는 ID, PW를 통해 내부 인증을 완료 후 내부에 DB 세션을 생성
5. DB는 커넥션 생성이 완료되었다는 응답을 보냄
6. DB 드라이버는 커넥션 객체를 생성해서 클라이언트에 반환  

</br>

## 커넥션 풀
* 위와 같은 과정을 요청마다 만들면 시간이 많이 소모되므로 커넥션 풀로 해결  
* 커넥션을 미리 생성해두고 사용  
* 애플리케이션을 시작하는 시점에 필요한 만큼 커넥션을 미리 확보에 풀에 보관
  * 서비스 특징, 서버 스펙에 따라 다르지만 기본값은 보통 10개  
  * 커넥션 수를 제한해 무한 연결 방지 -> DB 보호
* 커넥션 사용 후 종료가 아닌 살아있는 상태로 커넥션 풀에 다시 반환  
* 대표적 오픈소스 commons-dbcp2 , tomcat-jdbc pool , hikariCP  
  * 대부분 hikariCP 사용
 
</br>

## 정리
* 클라이언트가 요청할 때마다 데이터베이스 커넥션을 획득하면 시간 낭비  
* 위를 해결하기 위해 커넥션 풀 이용  
* 사용 후 종료가 아닌 살아있는 상태로 반환
* 대부분 hikariCP 사용

</br>

출처 : 인프런 스프링 DB 1편 - 데이터 접근 핵심 원리
